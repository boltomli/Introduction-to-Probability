%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 5.5
%%For: (Laurie Snell) (dartmouth college)
%%Title: (PSfig7.8)
%%CreationDate: (5/29/96) (11:40 AM)
%%BoundingBox: -2 0 282 169
%%HiResBoundingBox: -1.0587 0 281.9987 169.3738
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentFonts: Courier
%%+ Helvetica
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_IllustratorA_AI5 1.0 0
%AI5_FileFormat 1.2
%AI3_ColorUsage: Color
%AI3_TemplateBox: 140 86.5 140 86.5
%AI3_TileBox: 0 0 552 728
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -268 374.5 1 826 581 18 0 1 3 40
%AI5_OpenViewLayers: 7
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.0 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.0 
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 21 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
	level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(03/26/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_IllustratorA_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Abbreviated Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI5_vars 70 dict dup begin
put
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_IllustratorA_AI5 74 dict dup begin
put
/initialize
{
	Adobe_IllustratorA_AI5 dup begin
	Adobe_IllustratorA_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_IllustratorA_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			clip /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore clip newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef clip
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
			
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
currentdict readonly pop
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Courier
%%IncludeFont: Helvetica
Adobe_level2_AI5 /initialize get exec
Adobe_IllustratorA_AI5_vars Adobe_IllustratorA_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_IllustratorA_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Courier Courier
[/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
800 Ar
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
3 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Red & Yellow)
(Red & Yellow) 0 2 Bd
[
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
FFFFFEFEFDFDFDFCFCFBFBFBFAFAF9F9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0EF
EFEFEEEEEDEDEDECECEBEBEBEAEAE9E9E9E8E8E7E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DF
DFDFDEDEDDDDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D1D0D0CF
CFCFCECECDCDCDCCCCCBCBCBCACAC9C9C9C8C8C7C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C1C0C0BF
BFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B7B6B6B5B5B5B4B4B3B3B3B2B2B1B1B1B0B0AF
AFAFAEAEADADADACACABABABAAAAA9A9A9A8A8A7A7A7A6A6A5A5A5A4A4A3A3A3A2A2A1A1A1A0A09F
9F9F9E9E9D9D9D9C9C9B9B9B9A9A9999
>
0
1 %_Br
[
0 1 0.6 0 1 50 100 %_Bs
0 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Blue Radial)
(Yellow & Blue Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4180 4406.5 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Red & Yellow) -4180 4406.5 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Blue Radial) -4180 4406.5 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
(Yellow Stripe) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
0 0 0 0 k
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
0 0 0 0 k
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
0 0 0 0 k
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
0 R
1 1 1 0 K
800 Ar
1 J 1 j 0.5014 w 500 M []0 d
%AI3_Note:
0 D
37.0143 14.1812 m
37.0143 15.7481 l
S
0 O
1 1 1 0 k
0 0 m
F
0 To
10 0 0 10 34.0143 4.7762 0 Tp
TP
0 Tr
0 J 0 j 1 w 4 M
/_Courier 1 Tf
0 Ts
100 Tz
0 Tt
0 TA
%_ 0 XL
36 0 Xb
XB
0 0 0 TC
100 100 100 TW
0 0 0 Ti
0 Ta
0 0 2 2 3 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
(0) Tx 
(\r) TX 
TO
0 R
1 1 1 0 K
1 J 1 j 0.5014 w 500 M
76.8084 14.1812 m
76.8084 15.7481 l
S
0 O
1 1 1 0 k
0 0 m
F
0 To
10 0 0 10 73.8634 5.0012 0 Tp
TP
0 Tr
0 J 0 j 1 w 4 M
(5) Tx 
(\r) TX 
TO
0 R
1 1 1 0 K
1 J 1 j 0.5014 w 500 M
116.6025 14.1812 m
116.6025 15.7481 l
S
0 O
1 1 1 0 k
0 0 m
F
0 To
10 0 0 10 110.6525 4.7762 0 Tp
TP
0 Tr
0 J 0 j 1 w 4 M
(10) Tx 
(\r) TX 
TO
0 R
1 1 1 0 K
1 J 1 j 0.5014 w 500 M
156.3965 14.1812 m
156.3965 15.7481 l
S
0 O
1 1 1 0 k
0 0 m
F
0 To
10 0 0 10 150.4315 4.7762 0 Tp
TP
0 Tr
0 J 0 j 1 w 4 M
(15) Tx 
(\r) TX 
TO
0 R
1 1 1 0 K
1 J 1 j 0.5014 w 500 M
196.1906 14.1812 m
196.1906 15.7481 l
S
0 O
1 1 1 0 k
0 0 m
F
0 To
10 0 0 10 190.3706 4.7762 0 Tp
TP
0 Tr
0 J 0 j 1 w 4 M
(20) Tx 
(\r) TX 
TO
0 R
1 1 1 0 K
1 J 1 j 0.5014 w 500 M
235.9847 14.1812 m
235.9847 15.7481 l
S
0 O
1 1 1 0 k
0 0 m
F
0 To
10 0 0 10 230.1497 4.7762 0 Tp
TP
0 Tr
0 J 0 j 1 w 4 M
(25) Tx 
(\r) TX 
TO
0 R
1 1 1 0 K
1 J 1 j 0.5014 w 500 M
275.7788 14.1812 m
275.7788 15.7481 l
S
0 O
1 1 1 0 k
0 0 m
F
0 To
10 0 0 10 269.9338 4.7762 0 Tp
TP
0 Tr
0 J 0 j 1 w 4 M
(30) Tx 
(\r) TX 
TO
0 R
1 1 1 0 K
1 J 1 j 0.2507 w 500 M
44.9741 14.1812 m
44.9741 15.1213 l
S
52.9314 14.1812 m
52.9314 15.1213 l
S
60.8912 14.1812 m
60.8912 15.1213 l
S
68.8486 14.1812 m
68.8486 15.1213 l
S
84.7682 14.1812 m
84.7682 15.1213 l
S
92.7255 14.1812 m
92.7255 15.1213 l
S
100.6853 14.1812 m
100.6853 15.1213 l
S
108.6426 14.1812 m
108.6426 15.1213 l
S
124.5623 14.1812 m
124.5623 15.1213 l
S
132.5196 14.1812 m
132.5196 15.1213 l
S
140.4794 14.1812 m
140.4794 15.1213 l
S
148.4367 14.1812 m
148.4367 15.1213 l
S
164.3564 14.1812 m
164.3564 15.1213 l
S
172.3137 14.1812 m
172.3137 15.1213 l
S
180.2735 14.1812 m
180.2735 15.1213 l
S
188.2308 14.1812 m
188.2308 15.1213 l
S
204.1504 14.1812 m
204.1504 15.1213 l
S
212.1078 14.1812 m
212.1078 15.1213 l
S
220.0676 14.1812 m
220.0676 15.1213 l
S
228.0249 14.1812 m
228.0249 15.1213 l
S
243.9445 14.1812 m
243.9445 15.1213 l
S
251.9018 14.1812 m
251.9018 15.1213 l
S
259.8617 14.1812 m
259.8617 15.1213 l
S
267.819 14.1812 m
267.819 15.1213 l
S
0.5014 w
31.0451 14.1812 m
281.748 14.1812 l
S
31.0451 17.8715 m
32.612 17.8715 l
S
0 O
1 1 1 0 k
0 0 m
F
0 To
10 0 0 10 22.9713 14.8365 0 Tp
TP
0 Tr
0 J 0 j 1 w 4 M
(0) Tx 
(\r) TX 
TO
0 R
1 1 1 0 K
1 J 1 j 0.5014 w 500 M
31.0451 41.3674 m
32.612 41.3674 l
S
0 O
1 1 1 0 k
0 0 m
F
0 To
10 0 0 10 -1.0587 38.3324 0 Tp
TP
0 Tr
0 J 0 j 1 w 4 M
(0.025) Tx 
(\r) TX 
TO
0 R
1 1 1 0 K
1 J 1 j 0.5014 w 500 M
31.0451 64.8658 m
32.612 64.8658 l
S
0 O
1 1 1 0 k
0 0 m
F
0 To
10 0 0 10 4.9413 61.8308 0 Tp
TP
0 Tr
0 J 0 j 1 w 4 M
(0.05) Tx 
(\r) TX 
TO
0 R
1 1 1 0 K
1 J 1 j 0.5014 w 500 M
31.0451 88.3642 m
32.612 88.3642 l
S
0 O
1 1 1 0 k
0 0 m
F
0 To
10 0 0 10 -1.0587 85.3292 0 Tp
TP
0 Tr
0 J 0 j 1 w 4 M
(0.075) Tx 
(\r) TX 
TO
0 R
1 1 1 0 K
1 J 1 j 0.5014 w 500 M
31.0451 111.8601 m
32.612 111.8601 l
S
0 O
1 1 1 0 k
0 0 m
F
0 To
10 0 0 10 10.8613 108.8251 0 Tp
TP
0 Tr
0 J 0 j 1 w 4 M
(0.1) Tx 
(\r) TX 
TO
0 R
1 1 1 0 K
1 J 1 j 0.5014 w 500 M
31.0451 135.3585 m
32.612 135.3585 l
S
0 O
1 1 1 0 k
0 0 m
F
0 To
10 0 0 10 -1.0587 132.3235 0 Tp
TP
0 Tr
0 J 0 j 1 w 4 M
(0.125) Tx 
(\r) TX 
TO
0 R
1 1 1 0 K
1 J 1 j 0.5014 w 500 M
31.0451 158.8568 m
32.612 158.8568 l
S
0 O
1 1 1 0 k
0 0 m
F
0 To
10 0 0 10 4.9413 155.8218 0 Tp
TP
0 Tr
0 J 0 j 1 w 4 M
(0.15) Tx 
(\r) TX 
TO
0 R
1 1 1 0 K
1 J 1 j 0.2507 w 500 M
31.0451 22.5697 m
31.9852 22.5697 l
S
31.0451 27.2704 m
31.9852 27.2704 l
S
31.0451 31.9685 m
31.9852 31.9685 l
S
31.0451 36.6692 m
31.9852 36.6692 l
S
31.0451 46.0681 m
31.9852 46.0681 l
S
31.0451 50.7663 m
31.9852 50.7663 l
S
31.0451 55.4669 m
31.9852 55.4669 l
S
31.0451 60.1651 m
31.9852 60.1651 l
S
31.0451 69.564 m
31.9852 69.564 l
S
31.0451 74.2646 m
31.9852 74.2646 l
S
31.0451 78.9628 m
31.9852 78.9628 l
S
31.0451 83.6635 m
31.9852 83.6635 l
S
31.0451 93.0624 m
31.9852 93.0624 l
S
31.0451 97.763 m
31.9852 97.763 l
S
31.0451 102.4612 m
31.9852 102.4612 l
S
31.0451 107.1619 m
31.9852 107.1619 l
S
31.0451 116.5607 m
31.9852 116.5607 l
S
31.0451 121.2589 m
31.9852 121.2589 l
S
31.0451 125.9596 m
31.9852 125.9596 l
S
31.0451 130.6578 m
31.9852 130.6578 l
S
31.0451 140.0566 m
31.9852 140.0566 l
S
31.0451 144.7573 m
31.9852 144.7573 l
S
31.0451 149.4555 m
31.9852 149.4555 l
S
31.0451 154.1562 m
31.9852 154.1562 l
S
31.0451 163.555 m
31.9852 163.555 l
S
31.0451 168.2557 m
31.9852 168.2557 l
S
0.5014 w
31.0451 14.1812 m
31.0451 169.1231 l
S
37.0143 167.5562 m
37.0143 169.1231 l
S
76.8084 167.5562 m
76.8084 169.1231 l
S
116.6025 167.5562 m
116.6025 169.1231 l
S
156.3965 167.5562 m
156.3965 169.1231 l
S
196.1906 167.5562 m
196.1906 169.1231 l
S
235.9847 167.5562 m
235.9847 169.1231 l
S
275.7788 167.5562 m
275.7788 169.1231 l
S
0.2507 w
44.9741 168.183 m
44.9741 169.1231 l
S
52.9314 168.183 m
52.9314 169.1231 l
S
60.8912 168.183 m
60.8912 169.1231 l
S
68.8486 168.183 m
68.8486 169.1231 l
S
84.7682 168.183 m
84.7682 169.1231 l
S
92.7255 168.183 m
92.7255 169.1231 l
S
100.6853 168.183 m
100.6853 169.1231 l
S
108.6426 168.183 m
108.6426 169.1231 l
S
124.5623 168.183 m
124.5623 169.1231 l
S
132.5196 168.183 m
132.5196 169.1231 l
S
140.4794 168.183 m
140.4794 169.1231 l
S
148.4367 168.183 m
148.4367 169.1231 l
S
164.3564 168.183 m
164.3564 169.1231 l
S
172.3137 168.183 m
172.3137 169.1231 l
S
180.2735 168.183 m
180.2735 169.1231 l
S
188.2308 168.183 m
188.2308 169.1231 l
S
204.1504 168.183 m
204.1504 169.1231 l
S
212.1078 168.183 m
212.1078 169.1231 l
S
220.0676 168.183 m
220.0676 169.1231 l
S
228.0249 168.183 m
228.0249 169.1231 l
S
243.9445 168.183 m
243.9445 169.1231 l
S
251.9018 168.183 m
251.9018 169.1231 l
S
259.8617 168.183 m
259.8617 169.1231 l
S
267.819 168.183 m
267.819 169.1231 l
S
0.5014 w
31.0451 169.1231 m
281.748 169.1231 l
S
280.1811 17.8715 m
281.748 17.8715 l
S
280.1811 41.3674 m
281.748 41.3674 l
S
280.1811 64.8658 m
281.748 64.8658 l
S
280.1811 88.3642 m
281.748 88.3642 l
S
280.1811 111.8601 m
281.748 111.8601 l
S
280.1811 135.3585 m
281.748 135.3585 l
S
280.1811 158.8568 m
281.748 158.8568 l
S
0.2507 w
280.8079 22.5697 m
281.748 22.5697 l
S
280.8079 27.2704 m
281.748 27.2704 l
S
280.8079 31.9685 m
281.748 31.9685 l
S
280.8079 36.6692 m
281.748 36.6692 l
S
280.8079 46.0681 m
281.748 46.0681 l
S
280.8079 50.7663 m
281.748 50.7663 l
S
280.8079 55.4669 m
281.748 55.4669 l
S
280.8079 60.1651 m
281.748 60.1651 l
S
280.8079 69.564 m
281.748 69.564 l
S
280.8079 74.2646 m
281.748 74.2646 l
S
280.8079 78.9628 m
281.748 78.9628 l
S
280.8079 83.6635 m
281.748 83.6635 l
S
280.8079 93.0624 m
281.748 93.0624 l
S
280.8079 97.763 m
281.748 97.763 l
S
280.8079 102.4612 m
281.748 102.4612 l
S
280.8079 107.1619 m
281.748 107.1619 l
S
280.8079 116.5607 m
281.748 116.5607 l
S
280.8079 121.2589 m
281.748 121.2589 l
S
280.8079 125.9596 m
281.748 125.9596 l
S
280.8079 130.6578 m
281.748 130.6578 l
S
280.8079 140.0566 m
281.748 140.0566 l
S
280.8079 144.7573 m
281.748 144.7573 l
S
280.8079 149.4555 m
281.748 149.4555 l
S
280.8079 154.1562 m
281.748 154.1562 l
S
280.8079 163.555 m
281.748 163.555 l
S
280.8079 168.2557 m
281.748 168.2557 l
S
0.5014 w
281.748 14.1812 m
281.748 169.1231 l
S
31.0451 17.8715 m
281.748 17.8715 l
S
37.0143 14.1812 m
37.0143 169.1231 l
S
0 O
0.3 0.3 0.3 0 k
37.0143 17.8715 m
37.0143 51.7064 l
44.9741 51.7064 l
44.9741 17.8715 l
F
44.9741 17.8715 m
44.9741 109.9798 l
52.9314 109.9798 l
52.9314 17.8715 l
F
52.9314 17.8715 m
52.9314 165.4353 l
60.8912 165.4353 l
60.8912 17.8715 l
F
60.8912 17.8715 m
60.8912 158.8568 l
68.8486 158.8568 l
68.8486 17.8715 l
F
68.8486 17.8715 m
68.8486 150.3956 l
76.8084 150.3956 l
76.8084 17.8715 l
F
76.8084 17.8715 m
76.8084 127.8399 l
84.7682 127.8399 l
84.7682 17.8715 l
F
84.7682 17.8715 m
84.7682 97.763 l
92.7255 97.763 l
92.7255 17.8715 l
F
92.7255 17.8715 m
92.7255 67.6862 l
100.6853 67.6862 l
100.6853 17.8715 l
F
100.6853 17.8715 m
100.6853 70.5041 l
108.6426 70.5041 l
108.6426 17.8715 l
F
108.6426 17.8715 m
108.6426 45.1279 l
116.6025 45.1279 l
116.6025 17.8715 l
F
116.6025 17.8715 m
116.6025 42.3075 l
124.5623 42.3075 l
124.5623 17.8715 l
F
124.5623 17.8715 m
124.5623 34.789 l
132.5196 34.789 l
132.5196 17.8715 l
F
132.5196 17.8715 m
132.5196 27.2704 l
140.4794 27.2704 l
140.4794 17.8715 l
F
140.4794 17.8715 m
140.4794 22.5697 l
148.4367 22.5697 l
148.4367 17.8715 l
F
148.4367 17.8715 m
148.4367 21.6296 l
156.3965 21.6296 l
156.3965 17.8715 l
F
156.3965 17.8715 m
156.3965 21.6296 l
164.3564 21.6296 l
164.3564 17.8715 l
F
164.3564 17.8715 m
164.3564 18.8091 l
172.3137 18.8091 l
172.3137 17.8715 l
F
172.3137 17.8715 m
172.3137 20.6894 l
180.2735 20.6894 l
180.2735 17.8715 l
F
180.2735 17.8715 m
180.2735 18.8091 l
188.2308 18.8091 l
188.2308 17.8715 l
F
188.2308 17.8715 m
188.2308 17.8715 l
196.1906 17.8715 l
196.1906 17.8715 l
F
196.1906 17.8715 m
196.1906 22.5697 l
204.1504 22.5697 l
204.1504 17.8715 l
F
204.1504 17.8715 m
204.1504 18.8091 l
212.1078 18.8091 l
212.1078 17.8715 l
F
212.1078 17.8715 m
212.1078 17.8715 l
220.0676 17.8715 l
220.0676 17.8715 l
F
220.0676 17.8715 m
220.0676 17.8715 l
228.0249 17.8715 l
228.0249 17.8715 l
F
228.0249 17.8715 m
228.0249 17.8715 l
235.9847 17.8715 l
235.9847 17.8715 l
F
235.9847 17.8715 m
235.9847 17.8715 l
243.9445 17.8715 l
243.9445 17.8715 l
F
243.9445 17.8715 m
243.9445 17.8715 l
251.9018 17.8715 l
251.9018 17.8715 l
F
251.9018 17.8715 m
251.9018 17.8715 l
259.8617 17.8715 l
259.8617 17.8715 l
F
259.8617 17.8715 m
259.8617 17.8715 l
267.819 17.8715 l
267.819 17.8715 l
F
1.0028 w
267.819 17.8715 m
267.819 17.8715 l
275.7788 17.8715 l
275.7788 17.8715 l
F
0 R
1 1 1 0 K
37.0143 17.8715 m
37.0143 51.7064 l
S
44.9741 17.8715 m
44.9741 51.7064 l
S
37.0143 51.7064 m
44.9741 51.7064 l
S
44.9741 17.8715 m
44.9741 109.9798 l
S
52.9314 17.8715 m
52.9314 109.9798 l
S
44.9741 109.9798 m
52.9314 109.9798 l
S
52.9314 17.8715 m
52.9314 165.4353 l
S
60.8912 17.8715 m
60.8912 165.4353 l
S
52.9314 165.4353 m
60.8912 165.4353 l
S
60.8912 17.8715 m
60.8912 158.8568 l
S
68.8486 17.8715 m
68.8486 158.8568 l
S
60.8912 158.8568 m
68.8486 158.8568 l
S
68.8486 17.8715 m
68.8486 150.3956 l
S
76.8084 17.8715 m
76.8084 150.3956 l
S
68.8486 150.3956 m
76.8084 150.3956 l
S
76.8084 17.8715 m
76.8084 127.8399 l
S
84.7682 17.8715 m
84.7682 127.8399 l
S
76.8084 127.8399 m
84.7682 127.8399 l
S
84.7682 17.8715 m
84.7682 97.763 l
S
92.7255 17.8715 m
92.7255 97.763 l
S
84.7682 97.763 m
92.7255 97.763 l
S
92.7255 17.8715 m
92.7255 67.6862 l
S
100.6853 17.8715 m
100.6853 67.6862 l
S
92.7255 67.6862 m
100.6853 67.6862 l
S
100.6853 17.8715 m
100.6853 70.5041 l
S
108.6426 17.8715 m
108.6426 70.5041 l
S
100.6853 70.5041 m
108.6426 70.5041 l
S
108.6426 17.8715 m
108.6426 45.1279 l
S
116.6025 17.8715 m
116.6025 45.1279 l
S
108.6426 45.1279 m
116.6025 45.1279 l
S
116.6025 17.8715 m
116.6025 42.3075 l
S
124.5623 17.8715 m
124.5623 42.3075 l
S
116.6025 42.3075 m
124.5623 42.3075 l
S
124.5623 17.8715 m
124.5623 34.789 l
S
132.5196 17.8715 m
132.5196 34.789 l
S
124.5623 34.789 m
132.5196 34.789 l
S
132.5196 17.8715 m
132.5196 27.2704 l
S
140.4794 17.8715 m
140.4794 27.2704 l
S
132.5196 27.2704 m
140.4794 27.2704 l
S
140.4794 17.8715 m
140.4794 22.5697 l
S
148.4367 17.8715 m
148.4367 22.5697 l
S
140.4794 22.5697 m
148.4367 22.5697 l
S
148.4367 17.8715 m
148.4367 21.6296 l
S
156.3965 17.8715 m
156.3965 21.6296 l
S
148.4367 21.6296 m
156.3965 21.6296 l
S
156.3965 17.8715 m
156.3965 21.6296 l
S
164.3564 17.8715 m
164.3564 21.6296 l
S
156.3965 21.6296 m
164.3564 21.6296 l
S
164.3564 17.8715 m
164.3564 18.8091 l
S
172.3137 17.8715 m
172.3137 18.8091 l
S
164.3564 18.8091 m
172.3137 18.8091 l
S
172.3137 17.8715 m
172.3137 20.6894 l
S
180.2735 17.8715 m
180.2735 20.6894 l
S
172.3137 20.6894 m
180.2735 20.6894 l
S
180.2735 17.8715 m
180.2735 18.8091 l
S
188.2308 17.8715 m
188.2308 18.8091 l
S
180.2735 18.8091 m
188.2308 18.8091 l
S
188.2308 17.8715 m
188.2308 17.8715 l
S
196.1906 17.8715 m
196.1906 17.8715 l
S
188.2308 17.8715 m
196.1906 17.8715 l
S
196.1906 17.8715 m
196.1906 22.5697 l
S
204.1504 17.8715 m
204.1504 22.5697 l
S
196.1906 22.5697 m
204.1504 22.5697 l
S
204.1504 17.8715 m
204.1504 18.8091 l
S
212.1078 17.8715 m
212.1078 18.8091 l
S
204.1504 18.8091 m
212.1078 18.8091 l
S
212.1078 17.8715 m
212.1078 17.8715 l
S
220.0676 17.8715 m
220.0676 17.8715 l
S
212.1078 17.8715 m
220.0676 17.8715 l
S
220.0676 17.8715 m
220.0676 17.8715 l
S
228.0249 17.8715 m
228.0249 17.8715 l
S
220.0676 17.8715 m
228.0249 17.8715 l
S
228.0249 17.8715 m
228.0249 17.8715 l
S
235.9847 17.8715 m
235.9847 17.8715 l
S
228.0249 17.8715 m
235.9847 17.8715 l
S
235.9847 17.8715 m
235.9847 17.8715 l
S
243.9445 17.8715 m
243.9445 17.8715 l
S
235.9847 17.8715 m
243.9445 17.8715 l
S
243.9445 17.8715 m
243.9445 17.8715 l
S
251.9018 17.8715 m
251.9018 17.8715 l
S
243.9445 17.8715 m
251.9018 17.8715 l
S
251.9018 17.8715 m
251.9018 17.8715 l
S
259.8617 17.8715 m
259.8617 17.8715 l
S
251.9018 17.8715 m
259.8617 17.8715 l
S
259.8617 17.8715 m
259.8617 17.8715 l
S
267.819 17.8715 m
267.819 17.8715 l
S
259.8617 17.8715 m
267.819 17.8715 l
S
267.819 17.8715 m
267.819 17.8715 l
S
275.7788 17.8715 m
275.7788 17.8715 l
S
267.819 17.8715 m
275.7788 17.8715 l
S
37.0143 17.8715 m
41.9882 63.0532 l
44.4752 88.8706 l
46.9622 111.3687 l
49.4492 129.6349 l
50.6926 137.1234 l
51.9361 143.5389 l
53.1796 148.919 l
54.4231 153.3213 l
55.6666 156.8011 l
56.2883 158.215 l
56.9101 159.4209 l
57.5318 160.4287 l
58.1536 161.246 l
58.7778 161.8828 l
59.0887 162.1335 l
59.3996 162.3416 l
59.7104 162.5096 l
60.0213 162.6374 l
60.3322 162.7252 l
60.6431 162.7728 l
60.9539 162.7828 l
61.2648 162.7578 l
61.5757 162.6976 l
61.8865 162.6023 l
62.1974 162.472 l
62.5083 162.309 l
63.13 161.8878 l
63.7518 161.3463 l
64.3735 160.692 l
66.8605 157.0618 l
69.3475 152.1154 l
71.8344 146.1988 l
76.8084 132.5782 l
86.7563 103.6771 l
96.7042 78.2458 l
106.6546 58.5932 l
111.6285 50.9117 l
116.6025 44.5012 l
121.5764 39.2088 l
126.5504 34.8792 l
131.5243 31.3669 l
136.4982 28.5339 l
141.4747 26.2651 l
146.4486 24.455 l
151.4226 23.021 l
156.3965 21.8853 l
161.3705 20.9953 l
166.3444 20.2933 l
171.3184 19.7468 l
S
[]342.7273 d
171.3184 19.7468 m
176.2948 19.3206 l
181.2688 18.9897 l
186.2427 18.7314 l
191.2167 18.5309 l
196.1906 18.3779 l
201.1646 18.2601 l
206.1385 18.1673 l
211.1125 18.0972 l
216.0889 18.0445 l
221.0629 18.0019 l
226.0368 17.9718 l
231.0108 17.9467 l
235.9847 17.9292 l
240.9587 17.9141 l
245.9326 17.9041 l
250.9065 17.8966 l
255.883 17.8891 l
260.8569 17.8841 l
265.8309 17.8815 l
270.8048 17.879 l
275.7788 17.8765 l
S
q
0 J 0 j 1 w 4 M []0 d
31.0451 14.1812 m
281.748 14.1812 l
281.748 169.1231 l
31.0451 169.1231 l
31.0451 14.1812 l
h
W
n
Q
0 A
0 To
1 0 0 1 131 148.5 0 Tp
TP
0 Tr
0 O
0 g
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
/_Helvetica 10 Tf
0 Ts
100 Tz
0 Tt
0 TA
%_ 0 XL
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 0 2 2 3 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
(1000 experiments\r) Tx 
0 -12 Td
(60 rolls per experiment) Tx 
(\r) TX 
TO
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_IllustratorA_AI5 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
